AWSTemplateFormatVersion: '2010-09-09'
Description: Cloudformation stack to create VPC Endpoints, SSM Sessions Manager, Security Groups
Parameters:
  pVpcId:
    Description: VPC associated with the provided subnets
    Type: AWS::EC2::VPC::Id
    Default: "vpc-01438c482ebebf0c8"
  pVpcCIDR:
    Description: VPC CIDR Block 
    Type: String
    Default: "10.10.0.0/16"
  pFWMgmtSubnetAZ1:
    Type: "AWS::EC2::Subnet::Id"
    Description: Private Subnet A for Firewall Management
    Default: "subnet-0eee6621a6d333d5e"
  pFWMgmtSubnetAZ2:
    Type: "AWS::EC2::Subnet::Id"
    Description: Private Subnet B for Firewall Management
    Default: "subnet-039dc160c29a0ad50"
  pFWMgmtSubnetAZ3:
    Type: "AWS::EC2::Subnet::Id"
    Description: Private Subnet C for Firewall Management
    Default: "subnet-018d02b87e3e978f1"
  pFWMgmtSubnetRouteTableIDAZ1:
    Type: String
    Description: Private Subnet A for Firewall Management Route Table ID
    Default: "rtb-00f12b24dda7f1927"
  pFWMgmtSubnetRouteTableIDAZ2:
    Type: String
    Description: Private Subnet B for Firewall Management Route Table ID
    Default: "rtb-07f180acd91587002"
  pFWMgmtSubnetRouteTableIDAZ3:
    Type: String
    Description: Private Subnet C for Firewall Management Route Table ID
    Default: "rtb-0eb3b17425bbd912f"
  pLatestAmiId:
    Description: Region specific Windows image from the Parameter Store
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base'
  # pSnapshotID:
  #   Description: Monthly Snapshot ID with Latest FireFox, Putty and AWS CLI
  #   Type: String
  #   Default: "snap-004075e708b1b1621"
Resources:
  rSSMSessionManagerPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    DependsOn:
      - rSessionManagerKeyAlias
    Properties:
      Description: "SSM Session Manager Policy to start session"
      ManagedPolicyName: "SSMSessionManager"
      Path: "/"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - 
          Effect: Allow
          Action:
              - 'ssm:StartSession'
              - 'ssm:SendCommand'
          Resource:
              - !Sub 'arn:aws-cn:ec2:${AWS::Region}:${AWS::AccountId}:instance/*'
              - !Sub 'arn:aws-cn:ssm:${AWS::Region}:${AWS::AccountId}:document/SSM-SessionManagerRunShell'
              - !Sub 'arn:aws-cn:ssm:${AWS::Region}::document/AWS-StartPortForwardingSession'
          Condition:
              BoolIfExists:
                  'ssm:SessionDocumentAccessCheck': 'true'
        - 
          Effect: Allow
          Action:
              - 'ssm:DescribeSessions'
              - 'ssm:GetConnectionStatus'
              - 'ssm:DescribeInstanceInformation'
              - 'ssm:DescribeInstanceProperties'
              - 'ec2:DescribeInstances'
          Resource: '*'
        - 
          Effect: Allow
          Action:
              - 'ssm:TerminateSession'
          Resource:
              - '*'
        - 
          Effect: Allow
          Action:
              - 'ec2:DescribeInstances'
              - 'ec2:DescribeInstanceStatus'
          Resource:
              - '*'
        - 
          Effect: Allow
          Action:
              - 'kms:GenerateDataKey'
          Resource: !GetAtt 'rSSMSessionManagerKey.Arn'
      Groups:
        - "chinassmjpmember"
  rSessionManagerEC2Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'SSMSessionManagerec2'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - 'ec2.amazonaws.com.cn'
            Action: 'sts:AssumeRole'

  rSessionManagerEC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DependsOn: rSessionManagerEC2Role
    Properties:
      Roles:
        - !Ref rSessionManagerEC2Role
      InstanceProfileName: SSMSessionManagerEc2InstanceProfile
  rSSMSessionManagerInstanceProfilePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    DependsOn:
      - rSessionManagerEC2InstanceProfile
    Properties:
      Description: "SSM Session Manager Policy for EC2 Instance Profile"
      ManagedPolicyName: "SSMSessionManagerEC2policy"
      Path: "/"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - 
          Effect: Allow
          Action:
              - 'ssmmessages:CreateControlChannel'
              - 'ssmmessages:CreateDataChannel'
              - 'ssmmessages:OpenControlChannel'
              - 'ssmmessages:OpenDataChannel'
              - 'ssm:UpdateInstanceInformation'
          Resource: '*'
        - 
          Effect: Allow
          Action:
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
              - 'logs:DescribeLogGroups'
              - 'logs:DescribeLogStreams'
          Resource: '*'
        - 
          Effect: Allow
          Action:
              - 's3:PutObject'
              - 's3:PutObjectAcl'
              - 's3:GetObject'
              - 's3:ListBucket'
              - 's3:ListBucketMultipartUploads'
              - 's3:GetBucketLocation'
              - 's3:AbortMultipartUpload'
          Resource:
              - 'arn:aws-cn:s3:::lilly-ssmsessionmanager-prod-cn-northwest-1'
              - 'arn:aws-cn:s3:::lilly-ssmsessionmanager-prod-cn-northwest-1/*'
        - 
          Effect: Allow
          Action:
              - 's3:GetEncryptionConfiguration'
          Resource: '*'
        - 
          Effect: Allow
          Action: 'kms:GenerateDataKey'
          Resource: !GetAtt 'rSSMSessionManagerKey.Arn'
        - 
          Effect: Allow
          Action:
              - 's3:PutObject'
              - 's3:PutObjectAcl'
              - 's3:GetObject'
              - 's3:ListBucket'
              - 's3:ListBucketMultipartUploads'
              - 's3:GetBucketLocation'
              - 's3:AbortMultipartUpload'
          Resource:
              - 'arn:aws-cn:s3:::lilly-palologs-prod-cn-northwest-1'
              - 'arn:aws-cn:s3:::lilly-palologs-prod-cn-northwest-1/*'
        -
          Effect: Allow
          Action:
              - 'firehose:PutRecordBatch'
          Resource:
              - 'arn:aws:firehose:region:account-id:deliverystream/EventLogStream'
              - 'arn:aws:firehose:region:account-id:deliverystream/W3SVCLogStream'      
      Roles:
        - "SSMSessionManagerec2"
  rSessionManagerKeyAlias:
    Type: AWS::KMS::Alias
    DependsOn:
    - rSSMSessionManagerKey
    Properties:
      AliasName: alias/SSMSessionManager
      TargetKeyId:
        Ref: rSSMSessionManagerKey
  rSSMSessionManagerKey:
    Type: AWS::KMS::Key
    DependsOn:
    - rSessionManagerEC2Role
    Properties:
      Description: CMK for Session Manager
      EnableKeyRotation: 'true'
      KeyPolicy:
        Version: '2012-10-17'
        Id: key-1
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws-cn:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: '*'
        - Sid: Allow administration of the key
          Effect: Allow
          Principal:
            AWS: 
            - !Sub arn:aws-cn:iam::${AWS::AccountId}:user/V6X3065
            - !Sub arn:aws-cn:iam::${AWS::AccountId}:user/C155037
            - !Sub arn:aws-cn:iam::${AWS::AccountId}:user/L014759
            - !Sub arn:aws-cn:iam::${AWS::AccountId}:user/C267475
            - !Sub arn:aws-cn:iam::${AWS::AccountId}:user/C291398
          Action:
          - kms:Create*
          - kms:Describe*
          - kms:Enable*
          - kms:List*
          - kms:Put*
          - kms:Update*
          - kms:Revoke*
          - kms:Disable*
          - kms:Get*
          - kms:Delete*
          - kms:ScheduleKeyDeletion
          - kms:CancelKeyDeletion
          Resource: '*'
        - Sid: Allow use of the key
          Effect: Allow
          Principal:
            AWS: 
            - !Sub arn:aws-cn:iam::${AWS::AccountId}:user/V6X3065
            - !Sub arn:aws-cn:iam::${AWS::AccountId}:user/C155037
            - !Sub arn:aws-cn:iam::${AWS::AccountId}:user/L014759
            - !Sub arn:aws-cn:iam::${AWS::AccountId}:user/C267475
            - !Sub arn:aws-cn:iam::${AWS::AccountId}:user/C291398
            - !GetAtt 'rSessionManagerEC2Role.Arn'
          Action:
            - kms:DescribeKey
            - kms:Encrypt
            - kms:Decrypt
            - kms:ReEncrypt*
            - kms:GenerateDataKey
            - kms:GenerateDataKeyWithoutPlaintext
          Resource: '*'
        - Sid: Allow attachment of persistent resources
          Effect: Allow
          Principal:
            AWS:
            - !Sub arn:aws-cn:iam::${AWS::AccountId}:user/V6X3065
            - !Sub arn:aws-cn:iam::${AWS::AccountId}:user/C155037
            - !Sub arn:aws-cn:iam::${AWS::AccountId}:user/L014759
            - !Sub arn:aws-cn:iam::${AWS::AccountId}:user/C267475
            - !Sub arn:aws-cn:iam::${AWS::AccountId}:user/C291398           
            - !GetAtt 'rSessionManagerEC2Role.Arn'
          Action:
              - 'kms:CreateGrant'
              - 'kms:ListGrants'
              - 'kms:RevokeGrant'
          Resource: '*'
          Condition:
              Bool:
                  'kms:GrantIsForAWSResource': 'true'
        - Sid: Cloudwatch Logs group
          Effect: Allow
          Principal:
              Service: logs.cn-northwest-1.amazonaws.com.cn
          Action:
              - 'kms:Encrypt*'
              - 'kms:Decrypt*'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey*'
              - 'kms:Describe*'
          Resource: '*'
          Condition:
            ArnLike:
                'kms:EncryptionContext:aws:logs:arn': !Sub 'arn:aws-cn:logs:cn-northwest-1:${AWS::AccountId}:*'

  rSSMSessionsManagerLogGroup:
    Type: 'AWS::Logs::LogGroup'
    DependsOn: rSessionManagerKeyAlias
    Properties:
      KmsKeyId: !GetAtt 'rSSMSessionManagerKey.Arn'
      LogGroupName: ChinaSSMSessionsManager
      RetentionInDays: 180

  rVPCEndpointSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: VPCEndpoint
      GroupDescription: "Security Group for VPC Endpoint"
      VpcId:
        Ref: "pVpcId"
      SecurityGroupIngress:
        -
          IpProtocol: "tcp"
          FromPort: "443"
          ToPort: "443"
          CidrIp: !Ref pVpcCIDR
          Description: 443 from VPC CIDR for VPC Endpoint
      Tags:
        -
          Key: "Name"
          Value: "VPCEndpoint"
        # -
        #   Key: "Restricted"
        #   Value: "Restricted"

  rSSMEndpoint:
    Type: AWS::EC2::VPCEndpoint
    DependsOn: rVPCEndpointSecurityGroup
    Properties:
      VpcId: !Ref pVpcId
      ServiceName: com.amazonaws.cn-northwest-1.ssm
      VpcEndpointType: 'Interface'
      PrivateDnsEnabled: 'true'
      SubnetIds:
        - !Ref pFWMgmtSubnetAZ1
        - !Ref pFWMgmtSubnetAZ2
        - !Ref pFWMgmtSubnetAZ3
      SecurityGroupIds:
        - !Ref rVPCEndpointSecurityGroup

  rEC2Endpoint:
    Type: AWS::EC2::VPCEndpoint
    DependsOn: rVPCEndpointSecurityGroup
    Properties:
      VpcId: !Ref pVpcId
      ServiceName: cn.com.amazonaws.cn-northwest-1.ec2
      VpcEndpointType: 'Interface'
      PrivateDnsEnabled: 'true'
      SubnetIds:
        - !Ref pFWMgmtSubnetAZ1
        - !Ref pFWMgmtSubnetAZ2
        - !Ref pFWMgmtSubnetAZ3
      SecurityGroupIds:
        - !Ref rVPCEndpointSecurityGroup

  rSSMMessagesEndpoint:
    Type: AWS::EC2::VPCEndpoint
    DependsOn: rVPCEndpointSecurityGroup
    Properties:
      VpcId: !Ref pVpcId
      ServiceName: com.amazonaws.cn-northwest-1.ssmmessages
      VpcEndpointType: 'Interface'
      PrivateDnsEnabled: 'true'
      SubnetIds:
        - !Ref pFWMgmtSubnetAZ1
        - !Ref pFWMgmtSubnetAZ2
        - !Ref pFWMgmtSubnetAZ3
      SecurityGroupIds:
        - !Ref rVPCEndpointSecurityGroup

  rS3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 's3:*'
            Resource:
              - arn:aws-cn:s3:::*
      RouteTableIds:
        - !Ref pFWMgmtSubnetRouteTableIDAZ1
        - !Ref pFWMgmtSubnetRouteTableIDAZ2
        - !Ref pFWMgmtSubnetRouteTableIDAZ3
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcId: !Ref pVpcId
        
  rSSMEC2BastionSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: SSMEC2BastionToVPCEndpointandVMManagement
      GroupDescription: "SSM EC2 Bastion Security Group to Access VPC Endpoints and VM Management"
      VpcId:
        Ref: "pVpcId"
      # SecurityGroupIngress:
      #   -
      #     IpProtocol: "udp"
      #     FromPort: "514"
      #     ToPort: "514"
      #     CidrIp: 10.136.16.16/28
      #     Description: UDP 514 logging from FWMgmt Subnet 1
      #   -
      #     IpProtocol: "udp"
      #     FromPort: "514"
      #     ToPort: "514"
      #     CidrIp: 10.136.16.144/28
      #     Description: UDP 514 logging from FWMgmt Subnet 2
      #   -
      #     IpProtocol: "udp"
      #     FromPort: "514"
      #     ToPort: "514"
      #     CidrIp: 10.136.17.16/28
      #     Description: UDP 514 logging from FWMgmt  Subnet 3
      #   - 
      #     IpProtocol: "udp"
      #     FromPort: "514"
      #     ToPort: "514"
      #     CidrIp: 10.136.12.0/24
      #     Description: UDP 514 logging from Private Subnet A CIDR of Security VPC
      #   - 
      #     IpProtocol: "udp"
      #     FromPort: "514"
      #     ToPort: "514"
      #     CidrIp: 10.136.13.0/24
      #     Description: UDP 514 logging from Private Subnet B CIDR of Security VPC
      #   - 
      #     IpProtocol: "udp"
      #     FromPort: "514"
      #     ToPort: "514"
      #     CidrIp: 10.136.14.0/24
      #     Description: UDP 514 logging from Private Subnet C CIDR of Security VPC
      # SecurityGroupEgress:
      #   -
      #     IpProtocol: "tcp"
      #     FromPort: "443"
      #     ToPort: "443"
      #     CidrIp: !Ref pVpcCIDR
      #     Description: 443 for VM Management in VPC CIDR
      #   -
      #     IpProtocol: "tcp"
      #     FromPort: "22"
      #     ToPort: "22"
      #     CidrIp: !Ref pVpcCIDR
      #     Description: 22 for VM Management in VPC CIDR
      #   -
      #     IpProtocol: "icmp"
      #     FromPort: "8"
      #     ToPort: "-1"
      #     CidrIp: !Ref pVpcCIDR
      #     Description: ICMP for VM Management in VPC CIDR
      #   -
      #     IpProtocol: "tcp"
      #     FromPort: "443"
      #     ToPort: "443"
      #     CidrIp: 10.136.8.0/21
      #     Description: 443 for VM Management in Security VPC CIDR for Panorama
      #   -
      #     IpProtocol: "tcp"
      #     FromPort: "22"
      #     ToPort: "22"
      #     CidrIp: 10.136.8.0/21
      #     Description: 22 for VM Management in Security VPC CIDR for Panorama
      #   -
      #     IpProtocol: "icmp"
      #     FromPort: "8"
      #     ToPort: "-1"
      #     CidrIp: 10.136.8.0/21
      #     Description: ICMP for VM Management in Security VPC CIDR for Panorama
      #   -
      #     IpProtocol: "tcp"
      #     FromPort: "55555"
      #     ToPort: "55555"
      #     CidrIp: 10.136.8.0/21
      #     Description: 55555 for VM Management in Security VPC CIDR for FireMon
      Tags:
        -
          Key: "Name"
          Value: "SSMEC2-Bastion-To-VPCEndpoint-and-VMManagement"
        # -
        #   Key: "Restricted"
        #   Value: "Restricted"

  rLaunchConfigurationSSMJump:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      AssociatePublicIpAddress: 'false'
      BlockDeviceMappings:
        -
          DeviceName: /dev/sda1
          Ebs:
            DeleteOnTermination: 'false'
            Encrypted: 'true'
            # SnapshotId: !Ref pSnapshotID #Snapshot ID
            VolumeSize: 30
            VolumeType: gp2
      IamInstanceProfile: !GetAtt 'rSessionManagerEC2InstanceProfile.Arn'
      ImageId: !Ref pLatestAmiId #Amazon Image ID
      InstanceType: t3.large
      # KeyName:
      #   Required: No
      LaunchConfigurationName: Network-SSM-Jump-December-2021
      SecurityGroups:
        - !Ref rSSMEC2BastionSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          <script>
          @echo off
          timeout /T 300 /NOBREAK
          for /F "tokens=*" %%f IN ('curl http://169.254.169.254/latest/meta-data/instance-id') do (SET instanceID=%%f)
          ECHO %instanceID%
          net localgroup "Remote Desktop Users" C232230 /add
          timeout 3
          net user L014759-eca %instanceID% /ADD /Y /FULLNAME:"Simon Xu"
          timeout 3
          net localgroup "Remote Desktop Users" L014759 /add
          timeout 3
          net user C155037-eca %instanceID% /ADD /Y /FULLNAME:"Green Huang"
          timeout 3
          net localgroup "Remote Desktop Users" C155037 /add
          timeout 3
          net user V6X3065-eca %instanceID% /ADD /Y /FULLNAME:"Jack Shen"
          timeout 3
          net localgroup "Remote Desktop Users" V6X3065 /add
          timeout 3
          net user C267475-eca %instanceID% /ADD /Y /FULLNAME:"Guoshu Wan"
          timeout 3
          net localgroup "Remote Desktop Users" C267475 /add
          timeout 3
          net user C291398-eca %instanceID% /ADD /Y /FULLNAME:"Rongbin Zhong"
          timeout 3
          net localgroup "Remote Desktop Users" C291398 /add

          </script>

  rAutoScaleGroupSSMJump:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AutoScalingGroupName: Network-SSM-Jump-ASG
      AvailabilityZones:
        - cn-northwest-1a
      VPCZoneIdentifier:
        - !Ref pFWMgmtSubnetAZ1
      DesiredCapacity: 1
      MinSize: 0
      MaxSize: 1
      LaunchConfigurationName: !Ref rLaunchConfigurationSSMJump
      # MaxInstanceLifetime: 259200


